console.log('üéØ solutions-dynamic.js –ó–ê–ì–†–£–ñ–ï–ù!');

let allPresentations = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
async function loadPresentations() {
    try {
        console.log('üîÑ –ó–∞–ø—Ä–æ—Å –∫ /api/presentations...');
        const response = await fetch('/api/presentations');
        
        console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        allPresentations = await response.json();
        console.log('‚úÖ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', allPresentations);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π:', error);
        allPresentations = [];
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ API
async function loadProjects() {
    try {
        await loadPresentations(); // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        
        console.log('üîÑ –ó–∞–ø—Ä–æ—Å –∫ /api/projects...');
        const response = await fetch('/api/projects');
        
        console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const projects = await response.json();
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', projects);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        updateProjectsCounter(projects.length);
        
        displayFeaturedProjects(projects);
        displayAllProjects(projects);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error);
        showErrorMessage();
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
function updateProjectsCounter(count) {
    const counter = document.getElementById('total-projects');
    if (counter) {
        counter.textContent = count + '+';
    }
}

// –ù–∞—Ö–æ–¥–∏–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
function findPresentationForProject(project) {
    if (!allPresentations || allPresentations.length === 0) return null;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ ID –ø—Ä–æ–µ–∫—Ç–∞
    let presentation = allPresentations.find(p => p.id === project.id?.toString());
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    if (!presentation && project.title) {
        const projectId = generatePresentationId(project.title);
        presentation = allPresentations.find(p => p.id === projectId);
    }
    
    return presentation;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è
function generatePresentationId(title) {
    return title.toLowerCase()
        .replace(/[^a-z0-9–∞-—è—ë]/g, '-')
        .replace(/-+/g, '-')
        .replace(/^-|-$/g, '');
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º featured –ø—Ä–æ–µ–∫—Ç—ã
function displayFeaturedProjects(projects) {
    const container = document.getElementById('featured-projects-container');
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä featured-projects-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    const featuredProjects = projects.filter(project => project.featured === true);
    console.log('‚≠ê Featured –ø—Ä–æ–µ–∫—Ç—ã:', featuredProjects);
    
    if (featuredProjects.length === 0) {
        container.innerHTML = `
            <div class="error-message">
                <h3>–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</h3>
                <p>–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ–º–µ—Ç–∫–æ–π "featured"</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = featuredProjects.map((project, index) => {
        const presentation = findPresentationForProject(project);
        console.log(`üìä –î–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "${project.title}" –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è:`, presentation);
        
        return `
        <div class="solution-detailed-card" data-aos="fade-up" data-aos-delay="${index * 100}">
            <div class="solution-main-content">
                <div class="solution-header-detailed">
                    <div class="solution-icon-detailed">
                        <span>${project.icon || 'üíº'}</span>
                        <div class="icon-glow-detailed"></div>
                    </div>
                    <div class="solution-title-section">
                        <h3>${project.title || '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'}</h3>
                        <div class="solution-meta">
                            <span class="solution-year">${project.year || '2023'}</span>
                            <span class="solution-status status-${project.status || 'implemented'}">${getStatusText(project.status)}</span>
                            <span class="solution-clients">${project.clients || '–ö–ª–∏–µ–Ω—Ç—ã'}</span>
                        </div>
                    </div>
                </div>
                <p class="solution-description-detailed">${project.description || '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'}</p>
                ${project.features ? `
                <div class="solution-features-detailed">
                    <div class="feature-column">
                        <h4>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
                        <ul>
                            ${(project.features.main || []).slice(0, 4).map(feature => `<li>${feature}</li>`).join('')}
                        </ul>
                    </div>
                    <div class="feature-column">
                        <h4>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h4>
                        <ul>
                            ${(project.features.advantages || []).slice(0, 4).map(advantage => `<li>${advantage}</li>`).join('')}
                        </ul>
                    </div>
                </div>
                ` : ''}
            </div>
            <div class="solution-results">
                ${project.metrics ? `
                <div class="result-metrics">
                    ${project.metrics.slice(0, 3).map(metric => `
                        <div class="result-metric">
                            <div class="metric-value">${metric.value || '0'}</div>
                            <div class="metric-label">${metric.label || '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å'}</div>
                        </div>
                    `).join('')}
                </div>
                ` : ''}
                <div class="solution-actions-detailed">
                    ${presentation ? `
                    <button class="btn btn-primary btn-small btn-view-pdf" 
                            data-solution="${presentation.id}" 
                            onclick="showPresentation('${presentation.id}')">
                        <span>–°–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é</span>
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" stroke="currentColor" stroke-width="2"/>
                            <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2"/>
                            <line x1="16" y1="13" x2="8" y2="13" stroke="currentColor" stroke-width="2"/>
                            <line x1="16" y1="17" x2="8" y2="17" stroke="currentColor" stroke-width="2"/>
                            <polyline points="10,9 9,9 8,9" stroke="currentColor" stroke-width="2"/>
                        </svg>
                    </button>
                    ` : `
                    <button class="btn btn-outline btn-small" disabled>
                        <span>–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç</span>
                    </button>
                    `}
                </div>
            </div>
        </div>
    `}).join('');
    
    console.log('‚úÖ Featured –ø—Ä–æ–µ–∫—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º –≤–∏–¥–µ
function displayAllProjects(projects) {
    const container = document.getElementById('all-projects-container');
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä all-projects-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    container.innerHTML = projects.map((project, index) => {
        const presentation = findPresentationForProject(project);
        
        return `
        <div class="solution-compact-card" data-aos="fade-up" data-aos-delay="${index * 50}">
            <div class="compact-icon">${project.icon || 'üíº'}</div>
            <div class="compact-content">
                <h4>${project.title || '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'}</h4>
                <p>${project.shortDescription || project.description || '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'}</p>
                <div class="compact-meta">
                    <span class="year">${project.year || '2023'}</span>
                    <span class="status status-${project.status || 'implemented'}">${getStatusText(project.status)}</span>
                    ${presentation ? `
                    <button class="btn-pdf-mini" onclick="showPresentation('${presentation.id}')" 
                            title="–°–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é">
                        üìä
                    </button>
                    ` : ''}
                </div>
            </div>
        </div>
    `}).join('');
    
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage() {
    const featuredContainer = document.getElementById('featured-projects-container');
    const allContainer = document.getElementById('all-projects-container');
    
    const errorHTML = `
        <div class="error-message">
            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤</h3>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
            <button class="btn btn-outline btn-small" onclick="location.reload()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
        </div>
    `;
    
    if (featuredContainer) featuredContainer.innerHTML = errorHTML;
    if (allContainer) allContainer.innerHTML = errorHTML;
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
function getStatusText(status) {
    const statusMap = {
        'implemented': '–í–Ω–µ–¥—Ä–µ–Ω–∞',
        'development': '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 
        'prototype': '–ü—Ä–æ—Ç–æ—Ç–∏–ø',
        'planned': '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞'
    };
    return statusMap[status] || '–í–Ω–µ–¥—Ä–µ–Ω–∞';
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
document.addEventListener('DOMContentLoaded', function() {
    console.log('üéØ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤');
    loadProjects();
});